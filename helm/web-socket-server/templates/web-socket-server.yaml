apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.docker.username }}/{{ .Values.image }}:{{ .Values.tag }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env-config
          ports:
            - containerPort: {{ .Values.webSocketServer.port }}
          resources:
            requests:
              memory: 5Mi
              cpu: 1m
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.webSocketServer.port }}
            successThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.webSocketServer.service.name }}
spec:
  selector:
    app: {{ .Chart.Name }}
  type: {{ .Values.webSocketServer.service.type }}
  ports:
    - port: {{ .Values.webSocketServer.port }}
      targetPort: {{ .Values.webSocketServer.port }}
      {{- if .Values.webSocketServer.nodePort }}
      nodePort: {{ .Values.webSocketServer.nodePort }}
      {{- end }}

